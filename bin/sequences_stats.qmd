---
title: "Rapport Séquences et Annotations"
format: html
editor: visual

params:
  before: "null"
  after: "null"
  annotation_network: "null"
  length_annotation: "null"
---

Ce rapport présente la distribution de la taille des séquences avant et après la constrution du réseau.

```{r}
#| echo: false
#| output: false

library(ggplot2)
library(dplyr)
library(tidyr)
library(knitr)

```

## Distribution de la taille des séquences

### Avant la construction du réseau

Figure 1 : Distributiond de la taille des séquences avant la construction l'alignement des séquences avec Diamond BLASTp et les étapes de filtrations effectué avant la constrution du réseau.

```{r}
#| echo: false
#| output: false

#df.length <- read.table("/home/jrousseau/Documents/git_projects/workflow-laggoon-mcl/lagoon-mcl-recup/workdir/lagoon-mcl/94/bf201da92b2252b3fbc61f52c1e06a/sequence_length.tsv", col.names = c("protein_accession", "length"), header = FALSE, sep = "\t")

df.length <- read.table(params$before, col.names = c("protein_accession", "length"), header = FALSE, sep = "\t")

plot.length <- df.length |> 
   ggplot(aes(x = length)) +
   geom_histogram(bins = 200, color = "steelblue") +
   theme_light() +
   labs(title = "Distribution de la taille des séquences",
        subtitle = "Avant la construction du réseau",
        x = "Longeur",
        y = "Nombre de séquences") +
   theme(plot.title = element_text(size = 15, face = "bold"),
         plot.subtitle = element_text(size = 15),
         axis.title = element_text(size = 15, face = "bold"),
         axis.text = element_text(size = 12))
```

```{r}
#| label: figure-1
#| echo: false

plot.length
```

### Dans le réseau

Figure 2 : Distribution de la taille des séquences présente dans le réseau.

```{r}
#| echo: false
#| output: false

#df.length.network <- read.table("/home/jrousseau/Documents/git_projects/workflow-laggoon-mcl/lagoon-mcl-recup/workdir/lagoon-mcl/94/bf201da92b2252b3fbc61f52c1e06a/sequence_length_network.tsv", col.names = c("protein_accession", "length"), header = FALSE, sep = "\t")

df.length.network <- read.table(params$after, col.names = c("protein_accession", "length"), header = FALSE, sep = "\t")

plot.length.network <- df.length.network |> 
   ggplot(aes(x = length)) +
   geom_histogram(bins = 200, color = "steelblue") +
   theme_light() +
   labs(title = "Distribution de la taille des séquences",
        subtitle = "Avant la construction du réseau",
        x = "Longeur",
        y = "Nombre de séquences") +
   theme(plot.title = element_text(size = 15, face = "bold"),
         plot.subtitle = element_text(size = 15),
         axis.title = element_text(size = 15, face = "bold"),
         axis.text = element_text(size = 12))
```

```{r}
#| label: figure-2
#| echo: false

plot.length.network
```

### Nombre de séquence retenu dans le réseau

```{r}
#| label: table-1
#| echo: false

before_nework <- c(nrow(df.length))
after_network <- c(nrow(df.length.network))

sequence <- data.frame(before_nework, after_network)
#colnames(sequence) <- c("Sequence before network", "Sequence after network")

sequence
```

## Étude des séquences annotées dans le réseaux en fonction des informations

### initialement

```{r}
#df.annotation.init <- read.table("/home/jrousseau/Documents/git_projects/workflow-laggoon-mcl/lagoon-mcl-recup/workdir/lagoon-mcl/94/bf201da92b2252b3fbc61f52c1e06a/annotation.tsv", header = FALSE, col.names = c("protein_accession","database_accession", "database"), sep = "\t")

#df.annotation.init <- read.table(params$annotation, header = FALSE, col.names = c("protein_accession", "database"), sep = "\t")

#df.annotation.init.filter <- df.annotation.init |> 
#   filter(database != "gene3d_architecture") |> 
#   filter(database != "gene3d_class") |> 
#   filter(database != "gene3d_topology")

#df.annotation.init.filter$database[df.annotation.init.filter$database == "gene3d_superfamily"] <- "gene3d"

#df.annotation.init.filter |> 
#   group_by(database) |> 
#   summarise(count = n(),
#             prop_annote = count * 100 / before_nework,
#             n_seq_net = before_nework)


```

### dans le réseau

```{r}

#df.annotation <- read.table("/home/jrousseau/Documents/git_projects/workflow-laggoon-mcl/lagoon-mcl-recup/workdir/lagoon-mcl/94/bf201da92b2252b3fbc61f52c1e06a/annotation.tsv", header = FALSE, col.names = c("protein_accession", "database_accession", "database"), sep = "\t")

df.annotation <- read.table(params$annotation_network, header = FALSE, col.names = c("protein_accession", "length", "database"), sep = "\t")

df.annotation.filter <- df.annotation |> 
   filter(database != "gene3d_architecture") |> 
   filter(database != "gene3d_class") |> 
   filter(database != "gene3d_topology")

df.annotation.filter$database[df.annotation.filter$database == "gene3d_superfamily"] <- "gene3d"

df.sequence.network <- df.annotation.filter |> 
   distinct(protein_accession, database, .keep_all = TRUE) |> 
   group_by(database) |> 
   summarise(count = n(),
             prop_annote = count * 100 / after_network,
             n_seq_net = after_network)
#colnames(df.sequence.network) <- c("Banque de données", "Nombre de séquence annoté dans le réseau", "proportion de séquence annoté dans le réseau")

df.sequence.network
```

## longeur des séquences en focntion des banques de données

```{r}
#df.length.annotation <- read.table("/home/jrousseau/Documents/git_projects/workflow-laggoon-mcl/lagoon-mcl-recup/workdir/lagoon-mcl/94/bf201da92b2252b3fbc61f52c1e06a/length_annotation", header = FALSE, col.names = c("protein_accession", "length", "database"))

df.length.annotation <- read.table(params$length_annotation, header = FALSE, col.names = c("protein_accession", "length", "database"))

df.length.annotation.filter <- df.length.annotation |> 
   distinct(protein_accession, database, .keep_all = TRUE) |> 
   filter(database != "gene3d_architecture") |> 
   filter(database != "gene3d_class") |> 
   filter(database != "gene3d_topology")

df.length.annotation.filter$database[df.length.annotation.filter$database == "gene3d_superfamily"] <- "gene3d"

df.length.annotation.filter |> 
   ggplot(aes(x = length, fill = database)) +
   geom_histogram(bins = 200) +
   facet_wrap(~ database, ncol=4, labeller = labeller(database = ~ paste("Annot", .x))) +
   theme(legend.position = "none")
```

### Avant la  construction

### Après la constructio
